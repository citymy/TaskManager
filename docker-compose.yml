version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ${DOCKERFILE}
    ports:
      - "${PORT}:${PORT}"
    env_file: .env
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taskmanager
      - DB_USER=admin
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=taskmanager
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: taskmanager1-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "127.0.0.1:5050:80"
  frontend:
    build:
      context: .
      dockerfile: "${DOCKERFILE_FRONT}"
    ports:
      - "${PORT_FRONTEND}:${PORT_FRONTEND}"
    env_file: .env
    environment:
    - NODE_ENV=${NODE_ENV}
    - API_BASE_URL=${API_BASE_URL}
    depends_on:
      - app
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
    command: sh
volumes:
  postgres_data:
  redis_data:
